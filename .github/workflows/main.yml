name: README build

on:
  # push:
  #   branches: [main]
  schedule:
  - cron: "0 */3 * * *"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Detect package manager
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
          echo "manager=pnpm" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=pnpm" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "Unable to determine packager manager"
          exit 1
        fi
    - name: Setup Node
      uses: actions/setup-node@v5
      with:
        node-version: 24
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-
    - name: Install dependencies
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
    # - name: Install Chromium
    #   run: node node_modules/puppeteer/install.js
    - name: Type Check
      run: ${{ steps.detect-package-manager.outputs.runner }} typecheck
    - name: Build
      env:
        CI: false
      run: ${{ steps.detect-package-manager.outputs.runner }} build
    - name: Generate README file
      run: ${{ steps.detect-package-manager.outputs.runner }} build:readme
      env:
        OPEN_WEATHER_MAP_KEY: ${{secrets.OPEN_WEATHER_MAP_KEY}}
        WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        SHOW_TOTAL_TIME: true
        SHOW_PROFILE: true
        SHORT_INFO: true
        SHOW_WAKASTAT: true
        SHOW_COMMIT: true
        SHOW_WEEK: true
        SHOW_LANGUAGE: true
        SHOW_EDITORS: true
        SHOW_OS: true
        SHOW_PROJECTS: false
        SHOW_LANGUAGE_PER_REPO: true
        SHOW_UPDATE_DATE: true
        INPUT_COMMIT_MESSAGE: "chore(docs): automated updating readme"
    # - uses: EndBug/add-and-commit@v9
    #   with:
    #     add: "README.md"
    #     author_name: Eunchurn Park
    #     author_email: eunchurn.park@gmail.com
    #     pull: "--rebase --autostash"
    # - uses: anmol098/waka-readme-stats@master #PLEASE USE MASTER BRANCH
    # - uses: barthachijuu/waka-profile-stats@main #JS
    #   with:
    #     WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #     SHOW_PROJECTS: "False"
    #     SHOW_LINES_OF_CODE: "True"
    #     SHOW_LOC_CHART: "False"
    #     LOCALE: en
    #     COMMIT_BY_ME: "True"
    #     SHOW_COMMIT: "False"
    #     SHOW_UPDATED_DATE: "True"
    #     SHOW_SHORT_INFO: "False"
    #     SHOW_LANGUAGE_PER_REPO: "False"
    #     SHOW_DAYS_OF_WEEK: "False"
    # - name: Push new README.md
    #   uses: eunchurn/action-publish@v1.1.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     BRANCH_NAME: main
    #     USER_NAME: Eunchurn Park
    #     USER_EMAIL: eunchurn.park@gmail.com
